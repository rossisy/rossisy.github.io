---
layout: post
title: "File Permission Advanced Linux"
date: 2018-02-19 22:00:00 +080
categories: Linux
---
# File Permission Advanced
Linux中的文件除了基本的r、w、x权限外，还有一些系统隐藏的属性。这一部分隐藏的系统属性，可以使用chattr命令来设置，使用lsattr来查看。隐藏的属性中最重要的属性就是可以设置其不可修改的特性，其可以让文件所有者也不能进行修改。

## umask(文件默认权限)
创建文件和目录时，其默认的权限分别为-rw-rw-rw-和drwxrwxrwx，再根据umask设定的权限决定其最终的权限设置。
查看umask有两种方式：1. 直接使用umask，可以查看数字形态的权限设置；2. 使用-S参数，则会议符号类型的方式显示其权限设置
**注意：**umask的分数指的是其默认的权限中需要减掉的权限

## 隐藏属性
chattr (设置隐藏属性)
**常用参数:**
    +: 增加某个特殊参数，其他参数不变
    -: 删除某个特性参数
    =: 仅有设置的参数
    a: 设置a后，这个文件将只能增加数据，而不能删除也不能修改，只有root才能设置这个属性
    i: 设置后文件不能被删除、改名，也无法写入或添加数据，只有root能设置此属性
lsattr (显示隐藏属性)
**常用参数:**
    -a: 将隐藏文件的属性也显示出来
    -d: 如果接的是目录，仅列出目录本身的属性而非目录内的文件名
    -R: 连同子目录的数据也一并列出来

## 文件特殊属性 (SUID, SGID, SBIT)
SUID(SetUID)
    当s标志在文件所有者的x权限上时，称为Set UID。SUID只能作用于文件，对目录无效。SUID权限仅对二进制程序(binary program)有效；执行者仅在执行该程序的过程中有效；执行者将具有该程序程序所有者的权限
SGID(SetGID)
    当s标志在文件用户组的x权限上时，称为Set GID。SGID可以作用于文件和目录。SGID对二进制程序有用；程序执行者对于该程序需具备x的权限；执行者在执行的过程中将会获得该程序用户组的支持
    当目录设置了SGID的权限后，具有如下功能：用户若对于此目录具有r与x的权限时，该用户可以进入此目录；用户在此目录下的有效用户组(effective group)将会变成该目录的用户组；若用户在此目录下有w的权限，则用户所创建的新文件的用户组与此目录的用户组相同
SBIT(Sticky Bit)
    SBIT只对目录有效。SBIT对于目录的作用是：当用户对于此目录具有w，x权限，即具有写入的权限时，其在该目录下创建的文件或目录，仅有自己与root才有权限删除
SUID/SGID/SBIT权限设置
    使用数字形式的方式更改权限时，在最前面再增加一个数字代表这几个权限：4为SUID，2为SGID，1为SBIT
    使用符号形式的方式更改权限时，SUID为u+s，SGID为g+s，SBIT则为o+t
    当权限为S或T时，代表的是“空的”，即没有x的权限

