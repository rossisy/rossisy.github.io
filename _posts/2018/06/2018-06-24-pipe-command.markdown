---
layout: post
title: "pipe commands"
date: 2018-06-24 10:00:00 +0800
categories: shell
---
# 管道命令
管道命令仅能处理前一个命令传来的standard output信息，对于standard error没有直接的处理能力。
每个管道后面接的必须是一个命令，且这个命令要可以接受standard input的数据，这样的命令才可以称为管道命令，如less，more，head，tail等。

## 选取命令-cut，grep
选取命令通常是针对行来分析的。
### cut
将一段信息的某一段“切”出来，处理的信息是以“行”为单位。
cut -d 'seperator' -f fields
按分隔符（seperator）将行分成几部分并取出f制定的第几部分。
cut -c 字符范围
对于排列整齐的信息，将行的指定字符范围的的信息取出。
参数：
    -d: 后面接分隔字符，与-f一起使用
    -f: 依据-d的分割字符将一段信息切割成为数段，用-f取出第几段的意思
    -c: 以字符（characters）为单位取出固定字符区间

### grep
分析一行信息，若当中有grep的信息，就将该行取出。
grep [-acinv] [--color=auto] '查找字符串' filename
参数:
    -a: 将binary文件以text文件的方式查找数据
    -c: 计算找到‘查找字符串’的次数
    -i: 忽略大小写
    -n: 输出行号
    -v: 反向选择，即显示出没有‘查找字符串’内容的那一行

### sort
根据不同的数据类型进行排序。排序的字符与语系的编码有关，因此需要排序时，建议使用LANG=C来让语系统一，数据排序比较好一些。
sort [-fbMnrtuk] [file or stdin]
参数：
    -f：忽略大小写的差异，例如A与a视为编码相同
    -b：忽略最前面的空格符部分
    -M：以月份的名字来排序，例如JAN，DEC等的排序方法
    -n：使用“纯数字”进行排序（默认是以文字类型来排序的）
    -r：反向排序
    -u：就是uniq，相同的数据中，仅出现一行代表
    -t：分隔符，默认是用[Tab]键来分隔
    -k：以哪个区间（field）来进行排序的意思

### uniq
筛选相同的数据
uniq [-ic]
参数：
    -i：忽略大小写字符的不同
    -c：进行计数

### wc
wc [-lwn]
参数：
    -l：仅列出行
    -w：仅列出多少字（英文单字）
    -m：多少字符

### tee
双向重定向
tee [-a] file
参数：
    -a：以累加（append）的方式，将数据加入file当中

### tr
删除一段信息当中的文字，或者是进行文字信息的替换
tr [-ds] SET1 ...
参数：
    -d：删除信息当中的SET1这个字符串
    -s：替换掉重复的字符

### col
col [-xb]
参数：
    -x：将tab键转换成对等的空格键
    -b：在文字内有反斜杠时，仅保留反斜杠最后接的那个字符

### join
用于处理两个文件之间的数据，主要是将两个文件当中有相同数据的那一行加在一起
join [-ti12] file1 file2
参数：
    -t：join默认以空格符分隔数据，并且对比“第一个字段”的数据，如果两个文件相同，则将两条数据连成一行，且第一个字段放在第一个
    -i：忽略大小写的差异
    -1：这个是数字的1，代表第一个文件要用哪个字段来分析的意思
    -2：代表第二个文件要用哪个字段来分析的意思

### paste
将两个文件的两行贴在一起，中间以[tab]键隔开
paste [-d] file1 file2
参数：
    -d：后面可以接分隔字符，默认是以[tab]来分隔的
    -：如果file部分写成-，表示来自standard input的数据的意思

### expand
将[tab]键转成空格键
expand [-t] file
参数：
    -t：设置替换[tab]键的空格键个数

### split
将文件依据文件大小或行数来切割成小文件
split [-bl] file PREFIX
参数：
	-b：以大小来切割文件，可指定单位，如b，k，m等
	-l：以行数来进行切割
	PREFIX：代表前导符，可作为切割文件的前导文字

### xargs
可以读入stdin的数据，并且以空格符或断行字符进行分辨，将stdin的数据分隔成为arguments
xargs [-0epn] command
参数：
	-0：如果输入的stdin含有特殊字符，例如`，\，空格键等字符时，这个参数可以将它还原成一般字符。这个参数可以用于特殊状态
	-e：这个是EOF（end of file）的意思。后面可以接一个字符串，当xargs分析到这个字符串时，就会停止继续工作
	-p：在执行明个命令的参数时，都会询问用户的意思
	-n：后面接次数，每次command命令执行时，要使用几个参数的意思
当xargs后面没有接任何的命令时，默认是以echo来进行输出
